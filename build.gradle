apply plugin:'java'
apply plugin:'maven'

import org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact

task publishProperties {
    ext.groupId = 'com.dotcms.lib'
    ext.repository = "http://repo.dotcms.com/artifactory/ext-release-local"
    ext.validatonURL = "http://repo.dotcms.com/artifactory/simple/ext-release-local/"
    ext.username = 'jonathan.gamba'
    ext.password = 'XYZ'
}

def repackagedJars = ["dot.odmg_ukv_1", "dot.abdera-extensions-html_0.4.0-incubating_1"]

artifacts{
    //for each jar add a defaultPublishArtifact to the archives configuration
    repackagedJars.each{ jarName ->
        archives new DefaultPublishArtifact(jarName, "jar", "jar", null, new Date(), new File("$buildDir", "${jarName}.jar"))
    }
}

uploadArchives(){
    repositories {
        mavenDeployer {

            repackagedJars.each{ jarName ->

                JarInfo jarInfo = new JarInfo(jarName, publishProperties.groupId, publishProperties.validatonURL);

                println "--------------------------------"
                println "--------------------------------"
                println publishProperties.repository
                println publishProperties.validatonURL
                println publishProperties.groupId
                println jarInfo.artifactId
                println jarInfo.getVersion()
                println "--------------------------------"
                println "--------------------------------"

                addFilter(jarName) {artifact, file ->
                    artifact.name == jarName
                }

                //Setting the properties for the pom and artifactory
                pom(jarName).artifactId = jarInfo.artifactId
                pom(jarName).version = jarInfo.getVersion()
                pom(jarName).groupId = publishProperties.groupId
                pom(jarName).project {
                    build {
                        finalName '${artifactId}_${version}'
                    }
                }
            }

            repository(url: publishProperties.repository) {
                authentication(userName: publishProperties.username, password: publishProperties.password)
            }
        }

    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'commons-httpclient:commons-httpclient:3.1'
    }
}

import org.apache.commons.httpclient.HttpClient
import org.apache.commons.httpclient.methods.GetMethod
class JarInfo {

    String groupId
    String artifactId
    String jarVersion
    String dotVersion

    JarInfo(String jarName, String group, String validationURL) {

        groupId = group
        artifactId = jarName
        String groupFragmentPath = group.replace(".", "/")

        String[] nameArray = artifactId.split("_")
        artifactId = nameArray[0]
        jarVersion = nameArray[1]
        dotVersion = nameArray[2]

        //Create the URL in order to check if the artifact exist in artifactory
        //String url = validationURL + groupFragmentPath + '/' + artifactId + '/' + getVersion() + '/' + jarName + ".jar"
        String url = validationURL + groupFragmentPath + '/' + artifactId + '/' + getVersion() + '/' + artifactId + "-" + getVersion() + ".jar"

        Boolean exist = exist(url)
        println '+++++++++++++++++++++++++++'
        println url
        println exist
        println '+++++++++++++++++++++++++++'

        if (exist) {
            dotVersion = Integer.parseInt(dotVersion) + 1
        }
    }

    public String getVersion () {
        return jarVersion + "_" + dotVersion
    }

    private Boolean exist (String url) {

        HttpClient client = new HttpClient();
        GetMethod method = new GetMethod( url );

        //Hit the url
        int status = client.executeMethod(method);
        if(status == 200){
            return true
        }

        return false
    }

}